"""
Django settings for photos project.

Generated by 'django-admin startproject' using Django 3.0.5.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os
import sys

from environ import Env

environ = Env()

is_unit_test = "test" in sys.argv[0] or "test_coverage" in sys.argv[0]

if is_unit_test:
    os.environ["HT_STAGE"] = "unit_test"


# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '-zvb+1j&=#)#%&i%8o&(o12xh8ihu8#$z%1vmexz36kb)x0$$3'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

if environ.str("HT_STAGE") in ["prod"]:
    ALLOWED_HOSTS = []
else:
    ALLOWED_HOSTS = ["*"]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'minio_storage',
    'rest_framework',
    "core"
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'photos.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'photos.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

if environ.str("HT_STAGE") in ("local", "unit_test"):
    DATABASES = {
        "default": {
            "NAME": os.path.join(BASE_DIR, 'db.sqlite3'),
            "ENGINE": "django.db.backends.sqlite3"
        }
    }
else:
    DATABASES = {
        "default": {
            "ENGINE": "django.db.backends.postgresql",
            "NAME": environ.str("PS_DB_NAME"),
            "USER": environ.str("PS_DB_USER"),
            "PASSWORD": environ.str("PS_DB_PASSWORD"),
            "HOST": environ.str("PS_DB_HOST"),
            "PORT": environ.str("PS_DB_PORT"),
        }
    }


# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

REST_FRAMEWORK = {
    "DEFAULT_FILTER_BACKENDS": ["django_filters.rest_framework.DjangoFilterBackend"],
    'DEFAULT_VERSIONING_CLASS': 'rest_framework.versioning.NamespaceVersioning',
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ],
}

# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = '/static/'

MEDIA_URL = '/media/'

if environ.str("HT_STAGE") in ("test", "stage", "prod"):
    DEFAULT_FILE_STORAGE = "minio_storage.storage.MinioMediaStorage"
    STATICFILES_STORAGE = "minio_storage.storage.MinioStaticStorage"
    MINIO_STORAGE_ENDPOINT = environ.str("PS_MINIO_STORAGE_ENDPOINT")
    MINIO_PUBLIC_ENDPOINT = environ.str("PS_MINIO_PUBLIC_ENDPOINT")
    MINIO_STORAGE_STATIC_URL = MINIO_PUBLIC_ENDPOINT + "/static/"
    MINIO_STORAGE_MEDIA_URL = MINIO_PUBLIC_ENDPOINT + "/media/"
    MINIO_STORAGE_ACCESS_KEY = environ.str("PS_MINIO_STORAGE_ACCESS_KEY")
    MINIO_STORAGE_SECRET_KEY = environ.str("PS_MINIO_STORAGE_SECRET_KEY")
    MINIO_STORAGE_USE_HTTPS = False
    MINIO_STORAGE_MEDIA_BUCKET_NAME = environ.str("PS_MINIO_STORAGE_MEDIA_BUCKET_NAME")
    MINIO_STORAGE_AUTO_CREATE_MEDIA_BUCKET = True
    MINIO_STORAGE_STATIC_BUCKET_NAME = environ.str("PS_MINIO_STORAGE_STATIC_BUCKET_NAME")
    MINIO_STORAGE_AUTO_CREATE_STATIC_BUCKET = True
else:
    MINIO_PUBLIC_ENDPOINT = ""

IMAGE_SERVE_SIZE = (128, 128)
