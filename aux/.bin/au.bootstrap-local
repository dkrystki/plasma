#!/usr/bin/env bash
set -eou pipefail

pl.install-kubectl "$AU_KUBECTL_VER" "$AU_BIN_PATH"
pl.install-helm "$AU_HELM_VER" "$AU_BIN_PATH"
pl.install-hostess "$AU_BIN_PATH"

sudo snap remove microk8s
sudo snap install microk8s --classic --channel="$AU_KUBERNETES_VER"/stable

# Make microk8s use host docker instead of it's own
#sudo bash -c 'echo "--docker unix:///run/docker.sock" >> /var/snap/microk8s/1301/args/kubelet'
#sudo bash -c 'echo "--docker-endpoint unix:///run/docker.sock" >> /var/snap/microk8s/1301/args/kubelet'
#sudo bash -c 'echo "--docker-root=/var/lib/docker" >> /var/snap/microk8s/1301/args/kubelet'

#sudo sed -i 's/vermin/pony/g'
sudo sed -i "s/local.insecure-registry.io/$AU_REGISTRY_ADDRESS/g" /var/snap/microk8s/current/args/containerd-template.toml
sudo sed -i "s/http:\/\/localhost:32000/http:\/\/$AU_REGISTRY_ADDRESS/g" /var/snap/microk8s/current/args/containerd-template.toml

sudo microk8s.start

sleep 30

mkdir -p "$(dirname "$KUBECONFIG")"
sudo microk8s.config > "$KUBECONFIG"

sudo microk8s.enable dns
sudo microk8s.enable rbac
sudo microk8s.enable storage
sudo microk8s.enable ingress
#kubectl apply -f k8s/ingress-rbac.yaml

sudo sh -c 'echo "--allow-privileged=true" >> /var/snap/microk8s/current/args/kube-apiserver'
sudo systemctl restart snap.microk8s.daemon-apiserver.service


# reload env to populate CG_CLUSTER_ADDRESS env (needed for add-hosts)
eval "$(./shell.py "$AU_STAGE" --dry-run)"

au.add-hosts

pl.init-helm
