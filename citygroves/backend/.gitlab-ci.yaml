---
variables:
  BACKEND_DIR: "$CI_PROJECT_DIR/citygroves/backend"

.base: &base
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - .venv
      - .cache/
  image: aux.registry.local/python-cg-ci:latest
  before_script:
    - eval "$(./shell.py --dry-run)"
    - mkdir -p $HOME/.cache
    - "[[ -d .cache/pypoetry ]] && cp -r .cache/pypoetry $HOME/.cache/"
    - "[[ -d .cache/usr_local ]] && cp -r .cache/usr_local/* /usr/local/"
    - pl.bootstrap
    - cd citygroves
    - cd backend
    - eval "$(./shell.py test --dry-run)"

  after_script:
    # since caching doesn't work outside of build directory we have to move it to .cache dir
    - cd $CI_PROJECT_DIR
    - rm -rf .cache
    - mkdir .cache
    - mkdir .cache/usr_local
    - cp -r /usr/local/* .cache/usr_local
    - "[[ -d $HOME/.cache/pypoetry ]] && cp -r $HOME/.cache/pypoetry .cache/"

citygroves.be.flake8:
  <<: *base
#  only:
#    changes:
#      - citygroves/backend/**/*.py
#      - citygroves/backend/.bin/backend.flake8
  stage: test
  script:
    - be.bootstrap
    - be.flake8

#citygroves.be.test-devops:
#  <<: *base
##  only:
##    changes:
##      - citygroves/backend/env_*.py
##      - citygroves/backend/shell.py
#  stage: test
#  script:
#    - ./shell.py stage --dry-run
#
#    - cp "$CITYGROVES_LOCAL_ENV" env_local.py
#    - ./shell.py local --dry-run
#    - ./shell.py test --dry-run

citygroves.be.mypy:
  <<: *base
#  only:
#    changes:
#      - citygroves/backend/**/*.py
#      - citygroves/backend/.bin/backend.mypy
  stage: test
  script:
    - be.bootstrap
    - be.mypy

citygroves.be.test:
  <<: *base
#  only:
#    changes:
#      - citygroves/backend/**/*.py
  stage: test
  script:
    - be.bootstrap
    - be.test


citygroves.be.deploy-to-test:
  <<: *base
#  only:
#    changes:
#      - citygroves/backend/**/*

  image: aux.registry.local/kube-cg-ci:latest
  stage: deploy-test
  services:
    - name: docker:18.09.9-dind
      command: ['--insecure-registry=aux.registry.local']

  variables:
    DOCKER_HOST: "tcp://127.0.0.1:2375"

  script:
    - cd $PROJECT_DIR
    - eval "$(./shell.py test --dry-run)"
    - cp "$TEST_KUBECONFIG" envs/test/kubeconfig.yaml
    - cg.add-hosts
    - helm init --client-only
    - helm repo update
    - cg.cluster reset
    - cg.cluster system deploy
    - cg.cluster aux deploy
    - cd $BACKEND_DIR
    - eval "$(./shell.py test --dry-run)"
    - helm delete --purge $CG_HELM_RELEASE_NAME || true
    - be.deploy
