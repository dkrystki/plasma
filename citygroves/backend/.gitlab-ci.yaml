---

.bootstrap-backend: &bootstrap-backend |
  cd backend
  eval "$(./shell.py test --dry-run)"
  be.bootstrap

citygroves.be.flake8:
  extends:
    - .python-base
  only:
    changes:
      - citygroves/backend/**/*.py
      - citygroves/backend/.bin/backend.flake8
  script:
    - *bootstrap-backend
    - be.test-devops

citygroves.be.test-devops:
  extends:
    - .python-base
  only:
    changes:
      - citygroves/backend/**/*
      - citygroves/backend/shell.py
  script:
    - *bootstrap-backend
    - eval "$(./shell.py test --dry-run)"

citygroves.be.mypy:
  extends:
    - .python-base
  only:
    changes:
      - citygroves/backend/**/*.py
      - citygroves/backend/.bin/backend.mypy
  script:
    - *bootstrap-backend
    - be.mypy

citygroves.be.test:
  extends:
    - .python-base
  only:
    changes:
      - citygroves/backend/flesh/**/*
  script:
    - *bootstrap-backend
    - be.test


citygroves.be.deploy-to-test:
  extends:
    - .python-base
  only:
    changes:
      - citygroves/**/*

  image: aux.registry.local/kube-cg-ci:latest
  stage: deploy-test
  services:
    - name: docker:18.09.9-dind
      command: ['--insecure-registry=aux.registry.local']

  variables:
    DOCKER_HOST: "tcp://127.0.0.1:2375"

  script:
    - cd $PROJECT_DIR
    - eval "$(./shell.py test --dry-run)"
    - cp "$TEST_KUBECONFIG" envs/test/kubeconfig.yaml
    - cg.add-hosts
    - helm init --client-only
    - helm repo update
    - cg.cluster reset
    - cg.cluster system deploy
    - cg.cluster aux deploy
    - cd backend
    - eval "$(./shell.py test --dry-run)"
    - helm delete --purge $CG_HELM_RELEASE_NAME || true
    - be.deploy
